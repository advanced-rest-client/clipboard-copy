/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   clipboard-copy.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

declare namespace LogicElements {

  /**
   * An element that copies a text to clipboard.
   *
   * ### Example
   *
   * ```html
   * <clipboard-copy content="test"></clipboard-copy>
   * <script>
   * const elm = document.querySelectior('clipboard-copy');
   * if(elm.copy()) {
   *  console.info('Content has been copied to the clipboard');
   * } else {
   *  console.error('Content copy error. This browser is ancient!');
   * }
   * < /script>
   * ```
   */
  class ClipboardCopy extends HTMLElement {
    content: any;
    attributeChangedCallback(name: any, oldValue: any, newValue: any): void;

    /**
     * Execute content copy.
     *
     * @returns True if the content has been copied to the clipboard
     * and false if there was an error.
     */
    copy(): Boolean|null;

    /**
     * Sends the `content-copy` event.
     * If the event is canceled then the logic from this element won't be
     * executed. Useful if current platform doesn't support `execCommand('copy')`
     * and has other way to manage clipboard.
     *
     * @returns True if handler executed copy function.
     */
    _beforeCopy(): Boolean|null;

    /**
     * Sends the `content-copied` event that is not bubbling.
     */
    _notifyCopied(): Boolean|null;
  }
}

interface HTMLElementTagNameMap {
  "clipboard-copy": LogicElements.ClipboardCopy;
}
